Tutorial: https://www.pascallandau.com/blog/php-php-fpm-and-nginx-on-docker-in-windows-10
https://www.digitalocean.com/community/tutorials/how-to-set-up-laravel-nginx-and-mysql-with-docker-compose

Simplified schema:

+------------+  docker build   +--------------+  docker run -dt   +-----------+  docker exec -it   +------+
| Dockerfile | --------------> |    Image     | --------------->  | Container | -----------------> | Bash |
+------------+                 +--------------+                   +-----------+                    +------+
                                 ^
                                 | docker pull
                                 |
                               +--------------+
                               |   Registry   |
                               +--------------+

Build image:
	docker build -t docker-php-image -f Dockerfile .

Run container:
	docker run -di --name docker-php -v "C:/codebase/docker-php/app":/var/www docker-php-image

Enable package:
	docker-php-ext-enable {xdebug}
	
Actions with container:
	docker start {docker-php}
	docker stop {docker-php}
	docker restart {docker-php}		
	
Enter container cli:
	docker exec -it {docker-php} bash
	
Stop and delete container:
	docker rm -f {docker-php}
	
Stop and delete container:	
	docker rm -f $(docker ps -aq)
	
Run ngnix:
	docker run -di --name docker-nginx -p 8080:80 -v "C:\codebase\docker-php\nginx\conf.d":/etc/nginx/conf.d/ -v "C:\codebase\docker-php\app":/var/www docker-nginx-image
	-p 8080:80                                                  // maps port 8080 on the windows host to port 80 in the container
	-v "C:\codebase\docker-php\nginx\conf.d":/etc/nginx/conf.d/ // mounts the conf.d folder on the host to the correct directory in the container
	-v "C:\codebase\docker-php\app":/var/www                    // mounts the "code" directory in the correct place
	
docker ps -a  		// show all containers
docker images 		// show images
docker network ls 	// network ls
docker network create --driver bridge web-network // create bridge
docker network connect web-network docker-nginx
docker network inspect web-network
ping docker-php-fpm -c 2

php-fpm -i | grep config // find configs

Docker compose:
	create docker-compose.yml file
Run compose:
	docker-compose up -d
Shut down:
	docker-compose down 
Rebuild container:
	docker-compose build mysql

docker-compose up -d nginx mysql phpmyadmin
http://localhost/
http://localhost:8081/


docker image ls 				// list images
docker pull <image>	 			// pull image
docker pull php:8.1-cli-alpine 	// pull php:8.1 image


docker run --rm -v "$PWD":\rustchance\server -w /usr/src/myapp php:8.1-cli php test.php


docker pull php:8.1-cli // pull php image

docker run -it --rm --name my-runing-script -v "$PWD":/mnt/c/docker/rustchance/server/search.php -w /usr/src/myapp php:8.1-cli php search.php
docker rm <container name>
docker rm <container id>

docker-compose -p <name> up -d 	// compose with specific <name>, -d run in a deamon